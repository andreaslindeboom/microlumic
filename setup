#!/bin/bash
installing() {
    echo "- Installing $1"
}

alreadyInstalled() {
    echo "- $1 is already installed, skipping..."
}

installed() {
    echo "- Checking if $1 is installed"
    [ ! -z $(which $1) ]
}

cliToolsInstalled() {
    echo "- Checking if XCode developer tools are installed"
    xcode-select -p &> /dev/null
    [[ $? == 0 ]]
}

playbookPath() {
    echo "$ANSIBLE_DIR/$1.yml"
}

usage() {
    echo "Usage: $0 setup-name (this will be mapped to the $PLAYBOOK_PATH Ansible playbook)"
}

ensurePlaybook() {
    if [[ -z $1 ]]; then
        usage
        exit
    fi
    if [[ ! -f $1 ]]; then
        echo "Playbook $1 not found"
        usage
        exit
    fi
    echo "- Playbook found at $1"
}

canSudo() {
    return $(sudo -n true 2>&1 | wc -l)
}

ensureSudo() {
    echo "- Ensuring that sudo is active"
    if ! canSudo; then
        echo "- No active sudo, please enter password:"
        sudo -v
    else
        echo "- Got sudo, doing nothing"
    fi
}

ensureCliTools() {
    if cliToolsInstalled; then
        alreadyInstalled "XCode developer tools"
        return
    fi

    installing "XCode developer tools"

    # credits https://github.com/boxcutter/osx/blob/master/script/xcode-cli-tools.sh
    PROGRESS_FLAG=/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
    touch $PROGRESS_FLAG
    URL=$(softwareupdate -l | grep "\*.*Command Line" | head -n 1 | awk -F"*" '{print $2}' | sed -e 's/^ *//' | tr -d '\n')
    softwareupdate -i "$URL" -v
    rm $PROGRESS_FLAG
}

ensureAnsible() {
    if ! installed ansible; then
        installing "Ansible"
        ensurePip
        sudo pip install ansible

        #fix setuptools version conflict
        pip install --upgrade setuptools --user python
    else
        alreadyInstalled "Ansible"
    fi
}

ensurePip() {
    if ! installed pip; then
        installing "Pip"
        sudo easy_install --quiet pip
    else
        alreadyInstalled "Pip"
    fi
}

appstoreLogin() {
    echo "- Logging into the App Store"
    appstore/login
}

provision() {
    echo "- Provisioning system using Ansible, this may take a while"
    ansible-playbook -i "localhost," $1
}

ANSIBLE_DIR="ansible"
PLAYBOOK_PATH=$(playbookPath $1)

ensurePlaybook $PLAYBOOK_PATH
ensureSudo
ensureCliTools
ensureAnsible
appstoreLogin
provision $PLAYBOOK_PATH
